2009-10-23  Jakub Jelinek  <jakub@redhat.com>

	PR target/41762
	* config/i386/i386.c (ix86_pic_register_p): Don't call
	rtx_equal_for_cselib_p for VALUEs discarded as useless.

	* gcc.dg/pr41762.c: New test.

--- gcc/config/i386/i386.c.jj	2009-09-29 17:58:03.000000000 +0200
+++ gcc/config/i386/i386.c	2009-10-23 19:08:19.000000000 +0200
@@ -10379,7 +10379,7 @@ i386_output_dwarf_dtprel (FILE *file, in
 static bool
 ix86_pic_register_p (rtx x)
 {
-  if (GET_CODE (x) == VALUE)
+  if (GET_CODE (x) == VALUE && CSELIB_VAL_PTR (x))
     return (pic_offset_table_rtx
 	    && rtx_equal_for_cselib_p (x, pic_offset_table_rtx));
   else
--- gcc/testsuite/gcc.dg/pr41762.c.jj	2009-10-23 19:15:42.000000000 +0200
+++ gcc/testsuite/gcc.dg/pr41762.c	2009-10-23 19:14:35.000000000 +0200
@@ -0,0 +1,31 @@
+/* PR target/41762 */
+/* { dg-do compile } */
+/* { dg-options "-O2 -ftracer -fsched2-use-superblocks" } */
+/* { dg-options "-O2 -ftracer -fsched2-use-superblocks -fpic" { target fpic } } */
+
+extern __SIZE_TYPE__ strlen (const char *);
+extern int f1 (void *);
+extern char *f2 (void);
+extern void f3 (int, int);
+static char *a;
+char *b, *c, *d, *e;
+
+void
+foo (void)
+{
+  int f, g, h;
+  f = (a ? strlen (a) : strlen ("abcde"));
+  f += (b ? strlen (b) : 0);
+  f += (c ? strlen (c) : 0);
+  f += (d ? strlen (d) : 0);
+  f += (e ? strlen (e) : 0);
+  h = f1 (strlen);
+  g = strlen (a);
+  f3 (g, f);
+}
+
+void
+bar (void)
+{
+  a = f2 ();
+}
